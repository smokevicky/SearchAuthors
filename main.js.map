{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Constants/author-api-endpoints.ts","webpack:///./src/app/Services/author.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\r\nexport const AUTHOR_API_ENDPOINTS = {\r\n  getAuthorSummary: 'http://openlibrary.org/authors/AUTHOR_CODE.json',\r\n  getAuthorWorkDetails: 'http://openlibrary.org/authors/AUTHOR_CODE/works.json'\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { AUTHOR_API_ENDPOINTS } from '../Constants/author-api-endpoints';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorService {\n\n  constructor(\n    private _http: Http\n  ) { }\n\n  generateUrl(api: string, authorCode: string): string {\n    return api.replace('AUTHOR_CODE', authorCode);\n  }\n\n  getAuthorDetails(authorCode: string): Observable<any> {\n\n    const url = this.generateUrl(AUTHOR_API_ENDPOINTS.getAuthorSummary, authorCode);\n\n    return this._http.get(url);\n  }\n\n  getAuthorWorks(authorCode: string): Observable<any> {\n    const url = this.generateUrl(AUTHOR_API_ENDPOINTS.getAuthorWorkDetails, authorCode);\n\n    return this._http.get(url);\n  }\n\n}\n","module.exports = \"html {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\ninput {\\r\\n  padding: 8px;\\r\\n}\\r\\n\\r\\ninput[type='search'] {\\r\\n  width: 300px;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  margin: 0;\\r\\n  padding: 15px;\\r\\n}\\r\\n\\r\\n.author-detail {\\r\\n  padding: 15px 0;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  cursor: pointer;\\r\\n  transition: all 0.3s ease-in-out;\\r\\n  padding: 8px;\\r\\n  background-color: #FFF;\\r\\n  border: 1px solid #3D3D3D;\\r\\n}\\r\\n\\r\\nbutton:hover {\\r\\n  background-color: #3d3d3d;\\r\\n  color: #FFF;\\r\\n}\\r\\n\\r\\n.pt-15 {\\r\\n  padding: 15px 0;\\r\\n}\\r\\n\"","module.exports = \"<h2>{{title}}</h2>\\n\\n<form (submit)='eventSearchAuthors()'>\\n\\n  <input type=\\\"search\\\"\\n  placeholder=\\\"Please input author code to search\\\"\\n  [(ngModel)]=\\\"authorCode\\\"\\n  autocomplete=\\\"off\\\"\\n  name=\\\"textAuthorCode\\\" />\\n\\n  <input type='submit' value='Search' />\\n\\n  <br>\\n\\n  <span *ngIf=\\\"errorMessage\\\" style=\\\"color:red\\\">{{ errorMessage }}</span>\\n\\n  <summary>\\n    <div class='author-detail' *ngIf='authorDetails'>\\n      <strong>Author Name: </strong>\\n      <span>{{ authorDetails?.name }}</span>\\n      <span *ngIf='authorDetails?.death_date'>&nbsp;(dead)</span>\\n    </div>\\n    <button *ngIf='authorDetails' (click)='getAuthorRecentWorks()'>Show recent works</button>\\n    <summary class='pt-15' *ngIf='authorWorks'>\\n      <strong>Recent Works:</strong>\\n      <ol *ngIf='authorWorks?.entries?.length > 0; else noData'>\\n        <li *ngFor='let data of authorWorks?.entries'>{{ data?.title }}</li>\\n      </ol>\\n    </summary>\\n  </summary>\\n\\n</form>\\n\\n<ng-template #noData>\\n  <strong>NO DATA AVAILABLE</strong>\\n</ng-template>\\n\"","import { Component } from '@angular/core';\nimport { AuthorService } from './Services/author.service';\nimport { AuthorDetails, AuthorWorks } from './Models/author';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Search Authors App';\n\n  authorCode = '';\n  authorDetails: AuthorDetails;\n  errorMessage: string;\n  authorWorks: AuthorWorks;\n\n  constructor(private _authorService: AuthorService) {}\n\n  isAlphaNumeric(valueToCheck: string): boolean {\n    const regex = /^[a-zA-Z0-9]*$/;\n    return regex.test(valueToCheck);\n  }\n\n  eventSearchAuthors(): void {\n    if (this.authorCode && this.isAlphaNumeric(this.authorCode.trim())) {\n      this.errorMessage = '';\n      this.getAuthorDetails();\n    } else {\n      this.errorMessage = 'Please input a valid AlphaNumeric value.';\n    }\n  }\n\n  getAuthorDetails(): void {\n    this._authorService.getAuthorDetails(this.authorCode)\n    .subscribe(result => {\n      this.authorDetails = result.json();\n      this.authorWorks = null;\n    }, (err) => {\n      this.authorDetails = null;\n      this.authorWorks = null;\n      this.errorMessage = `There is no author with code ${this.authorCode} in our system. Please try again.`;\n    });\n  }\n\n  getAuthorRecentWorks(): void {\n    this._authorService.getAuthorWorks(this.authorCode)\n    .subscribe(result => {\n      this.authorWorks = result.json();\n    }, (err) => {\n      this.authorDetails = null;\n      this.authorWorks = null;\n      this.errorMessage = `There is no author with code ${this.authorCode} in our system. Please try again.`;\n    });\n  }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { AuthorService } from './Services/author.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n  ],\n  providers: [\n    AuthorService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}